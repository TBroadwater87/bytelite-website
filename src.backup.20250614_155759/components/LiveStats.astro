---
---

<div class="live-stats">
  <div class="stats-grid">
    <div class="stat-item">
      <div class="stat-value" id="data-compressed">0</div>
      <div class="stat-label">TB Compressed</div>
    </div>
    <div class="stat-item">
      <div class="stat-value" id="storage-saved">0</div>
      <div class="stat-label">TB Storage Saved</div>
    </div>
    <div class="stat-item">
      <div class="stat-value" id="time-saved">0</div>
      <div class="stat-label">Hours Saved</div>
    </div>
    <div class="stat-item">
      <div class="stat-value" id="cost-saved">$0</div>
      <div class="stat-label">Cost Saved</div>
    </div>
  </div>
</div>

<style>
  .live-stats {
    padding: 2rem;
    background: var(--color-surface);
    border-radius: 1rem;
    border: 1px solid rgba(0, 212, 255, 0.2);
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 2rem;
  }

  .stat-item {
    text-align: center;
  }

  .stat-value {
    font-size: 2.5rem;
    font-weight: 800;
    background: var(--gradient-accent);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 0.5rem;
  }

  .stat-label {
    color: var(--color-text-muted);
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 0.1em;
  }
</style>

<script>
  // Animate counters on page load
  function animateCounter(id: string, end: number, prefix: string = '', suffix: string = '') {
    const element = document.getElementById(id);
    if (!element) return;
    
    let current = 0;
    const increment = end / 100;
    const timer = setInterval(() => {
      current += increment;
      if (current >= end) {
        current = end;
        clearInterval(timer);
      }
      element.textContent = prefix + Math.floor(current).toLocaleString() + suffix;
    }, 20);
  }

  // Start animations when component is visible
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        animateCounter('data-compressed', 1247, '', '');
        animateCounter('storage-saved', 1246, '', '');
        animateCounter('time-saved', 8760, '', '');
        animateCounter('cost-saved', 2500000, '$', '');
        observer.disconnect();
      }
    });
  });

  const statsElement = document.querySelector('.live-stats');
  if (statsElement) observer.observe(statsElement);
</script>
