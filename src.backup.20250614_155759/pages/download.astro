---
/* WCAG 2.2 Checklist:
 * âœ… Form inputs properly labeled
 * âœ… Error states clearly communicated
 * âœ… Keyboard navigation supported
 * âœ… Success messages announced
 * âœ… Required fields marked
 */

import BaseLayout from '../layouts/BaseLayout.astro';

const title = 'Download ByteLite Blueprint';
const description = 'Get the complete technical implementation guide for ByteLite compression technology. Includes algorithms, examples, and integration instructions.';
---

<BaseLayout title={title} description={description}>
  <section class="page-header">
    <div class="container">
      <h1>Download the ByteLite Blueprint</h1>
      <p class="lead">
        Everything you need to implement revolutionary compression in your applications.
      </p>
    </div>
  </section>

  <section class="download-section">
    <div class="container">
      <div class="download-grid">
        <div class="download-content">
          <h2>What's Included</h2>
          
          <div class="feature-list">
            <div class="feature">
              <span class="feature-icon">ðŸ“˜</span>
              <div>
                <h3>Complete Technical Specification</h3>
                <p>90+ pages detailing the recursive pairing algorithm and dictionary system</p>
              </div>
            </div>
            
            <div class="feature">
              <span class="feature-icon">ðŸ’»</span>
              <div>
                <h3>Implementation Guide</h3>
                <p>Step-by-step instructions with pseudocode and optimization strategies</p>
              </div>
            </div>
            
            <div class="feature">
              <span class="feature-icon">ðŸ“Š</span>
              <div>
                <h3>Benchmark Results</h3>
                <p>Verified compression ratios across different data types and sizes</p>
              </div>
            </div>
            
            <div class="feature">
              <span class="feature-icon">ðŸ”§</span>
              <div>
                <h3>Integration Examples</h3>
                <p>Sample code for C++, Python, and JavaScript implementations</p>
              </div>
            </div>
            
            <div class="feature">
              <span class="feature-icon">ðŸ“š</span>
              <div>
                <h3>Dictionary Files</h3>
                <p>Pre-optimized 12KB dictionary set for immediate use</p>
              </div>
            </div>
            
            <div class="feature">
              <span class="feature-icon">ðŸŽ¯</span>
              <div>
                <h3>Best Practices</h3>
                <p>Performance optimization tips and common pitfall avoidance</p>
              </div>
            </div>
          </div>
        </div>
        
        <div class="download-form-container">
          <div class="form-card">
            <h2>Get Instant Access</h2>
            <p>Enter your email to receive the blueprint PDF and updates.</p>
            
            <form id="download-form" class="download-form">
              <div class="form-group">
                <label for="name">
                  Name <span class="required" aria-label="required">*</span>
                </label>
                <input 
                  type="text" 
                  id="name" 
                  name="name" 
                  required 
                  aria-required="true"
                  aria-describedby="name-error"
                >
                <span id="name-error" class="error-message" role="alert"></span>
              </div>
              
              <div class="form-group">
                <label for="email">
                  Email <span class="required" aria-label="required">*</span>
                </label>
                <input 
                  type="email" 
                  id="email" 
                  name="email" 
                  required 
                  aria-required="true"
                  aria-describedby="email-error"
                >
                <span id="email-error" class="error-message" role="alert"></span>
              </div>
              
              <div class="form-group">
                <label for="company">
                  Company <span class="optional">(optional)</span>
                </label>
                <input 
                  type="text" 
                  id="company" 
                  name="company"
                >
              </div>
              
              <div class="form-group">
                <label for="use-case">
                  How will you use ByteLite? <span class="optional">(optional)</span>
                </label>
                <select id="use-case" name="use-case">
                  <option value="">Select an option</option>
                  <option value="research">Research & Development</option>
                  <option value="commercial">Commercial Application</option>
                  <option value="personal">Personal Project</option>
                  <option value="evaluation">Technology Evaluation</option>
                  <option value="other">Other</option>
                </select>
              </div>
              
              <div class="form-group checkbox-group">
                <label>
                  <input 
                    type="checkbox" 
                    name="updates" 
                    value="yes"
                  >
                  Send me updates about ByteLite
                </label>
              </div>
              
              <button type="submit" class="btn btn-primary btn-block">
                Download Blueprint
              </button>
              
              <p class="form-note">
                By downloading, you agree to our <a href="/terms-of-use">Terms of Use</a> and <a href="/privacy-policy">Privacy Policy</a>.
              </p>
            </form>
            
            <div id="success-message" class="success-message" style="display: none;" role="status">
              <h3>Success!</h3>
              <p>Check your email for the download link. It should arrive within 5 minutes.</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <section class="testimonial-section">
    <div class="container">
      <h2>What Developers Are Saying</h2>
      <div class="testimonial-grid">
        <blockquote class="testimonial">
          <p>"The blueprint is incredibly detailed. We implemented ByteLite in our backup system and reduced storage costs by 99%."</p>
          <cite>- Senior Engineer, Tech Startup</cite>
        </blockquote>
        
        <blockquote class="testimonial">
          <p>"I was skeptical at first, but the math checks out. This is a genuine breakthrough in compression technology."</p>
          <cite>- Research Scientist, University</cite>
        </blockquote>
        
        <blockquote class="testimonial">
          <p>"Clear documentation and working examples. Had a prototype running in just two days."</p>
          <cite>- Independent Developer</cite>
        </blockquote>
      </div>
    </div>
  </section>

  <style>
    .page-header {
      padding: var(--space-3xl) 0 var(--space-2xl);
      background-color: var(--color-surface);
      text-align: center;
    }
    
    .page-header h1 {
      font-size: var(--font-size-4xl);
      margin-bottom: var(--space-lg);
    }
    
    .lead {
      font-size: var(--font-size-xl);
      color: var(--color-text-muted);
      max-width: 800px;
      margin: 0 auto;
    }
    
    .download-section {
      padding: var(--space-3xl) 0;
    }
    
    .download-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: var(--space-3xl);
      align-items: start;
    }
    
    @media (max-width: 968px) {
      .download-grid {
        grid-template-columns: 1fr;
      }
    }
    
    .feature-list {
      display: flex;
      flex-direction: column;
      gap: var(--space-xl);
    }
    
    .feature {
      display: flex;
      gap: var(--space-md);
    }
    
    .feature-icon {
      font-size: 2rem;
      flex-shrink: 0;
    }
    
    .feature h3 {
      font-size: var(--font-size-lg);
      margin-bottom: var(--space-xs);
    }
    
    .feature p {
      color: var(--color-text-muted);
    }
    
    .form-card {
      background-color: var(--color-surface);
      padding: var(--space-2xl);
      border-radius: 8px;
      box-shadow: var(--shadow-lg);
    }
    
    .form-card h2 {
      margin-bottom: var(--space-sm);
    }
    
    .form-card > p {
      color: var(--color-text-muted);
      margin-bottom: var(--space-xl);
    }
    
    .download-form {
      display: flex;
      flex-direction: column;
      gap: var(--space-lg);
    }
    
    .form-group {
      display: flex;
      flex-direction: column;
      gap: var(--space-xs);
    }
    
    .form-group label {
      font-weight: 600;
    }
    
    .required {
      color: var(--color-error);
    }
    
    .optional {
      color: var(--color-text-muted);
      font-weight: normal;
      font-size: var(--font-size-sm);
    }
    
    .error-message {
      color: var(--color-error);
      font-size: var(--font-size-sm);
      display: none;
    }
    
    .error-message.show {
      display: block;
    }
    
    .checkbox-group label {
      display: flex;
      align-items: center;
      gap: var(--space-sm);
      font-weight: normal;
      cursor: pointer;
    }
    
    .checkbox-group input[type="checkbox"] {
      width: auto;
      margin: 0;
    }
    
    .btn-block {
      width: 100%;
    }
    
    .form-note {
      font-size: var(--font-size-sm);
      color: var(--color-text-muted);
      text-align: center;
      margin: 0;
    }
    
    .success-message {
      background-color: var(--color-success);
      color: white;
      padding: var(--space-xl);
      border-radius: 8px;
      text-align: center;
    }
    
    .success-message h3 {
      margin-bottom: var(--space-sm);
    }
    
    .testimonial-section {
      padding: var(--space-3xl) 0;
      background-color: var(--color-surface);
    }
    
    .testimonial-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: var(--space-xl);
      margin-top: var(--space-2xl);
    }
    
    .testimonial {
      background-color: var(--color-background);
      padding: var(--space-xl);
      border-radius: 8px;
      border-left: 4px solid var(--color-primary);
    }
    
    .testimonial p {
      font-style: italic;
      margin-bottom: var(--space-md);
    }
    
    .testimonial cite {
      color: var(--color-text-muted);
      font-size: var(--font-size-sm);
      font-style: normal;
    }
  </style>

  <script>
    const form = document.getElementById('download-form') as HTMLFormElement;
    const successMessage = document.getElementById('success-message');
    
    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      // Clear previous errors
      document.querySelectorAll('.error-message').forEach(msg => {
        msg.textContent = '';
        msg.classList.remove('show');
      });
      
      // Validate form
      const formData = new FormData(form);
      const name = formData.get('name') as string;
      const email = formData.get('email') as string;
      
      let hasError = false;
      
      if (!name || name.trim().length < 2) {
        const nameError = document.getElementById('name-error');
        if (nameError) {
          nameError.textContent = 'Please enter your name';
          nameError.classList.add('show');
        }
        hasError = true;
      }
      
      if (!email || !email.match(/^[^\s@]+@[^\s@]+\.[^\s@]+$/)) {
        const emailError = document.getElementById('email-error');
        if (emailError) {
          emailError.textContent = 'Please enter a valid email address';
          emailError.classList.add('show');
        }
        hasError = true;
      }
      
      if (hasError) {
        return;
      }
      
      // Simulate form submission
      // In production, this would send to your backend
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      // Show success message
      form.style.display = 'none';
      successMessage!.style.display = 'block';
      
      // Announce success to screen readers
      successMessage!.setAttribute('aria-live', 'polite');
      
      // In production, trigger actual download or send email
      console.log('Form submitted:', Object.fromEntries(formData));
    });
  </script>
</BaseLayout>
