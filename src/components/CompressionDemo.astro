---
// Interactive compression demonstration
---

<div class="compression-demo">
  <h3>See ByteLite in Action</h3>
  
  <div class="demo-container">
    <div class="file-representation original" id="original-file">
      <span class="file-size">1 TB</span>
      <div class="file-visual">
        <div class="file-blocks">
          {[...Array(100)].map((_, i) => <div class="block" style={`animation-delay: ${i * 10}ms`}></div>)}
        </div>
      </div>
      <span class="file-label">Original File</span>
    </div>
    
    <div class="process-flow">
      <div class="arrow-line"></div>
      <div class="process-label">ByteLite<br/>Compression</div>
      <div class="arrow-head"></div>
    </div>
    
    <div class="file-representation compressed" id="compressed-file">
      <span class="file-size">18 Bytes</span>
      <div class="file-visual">
        <div class="single-block"></div>
      </div>
      <span class="file-label">Compressed File</span>
    </div>
  </div>
  
  <div class="stats-row">
    <div class="stat">
      <span class="stat-value">99.999999%</span>
      <span class="stat-label">Compression Ratio</span>
    </div>
    <div class="stat">
      <span class="stat-value">55.5MÃ—</span>
      <span class="stat-label">Space Saved</span>
    </div>
    <div class="stat">
      <span class="stat-value">Lossless</span>
      <span class="stat-label">Perfect Recovery</span>
    </div>
  </div>
  
  <button class="demo-button" onclick="animateCompression()">Watch Compression</button>
</div>

<style>
  .compression-demo {
    padding: 60px 40px;
    background: linear-gradient(135deg, rgba(0, 212, 255, 0.05), rgba(255, 0, 110, 0.05));
    border-radius: 24px;
    margin: 60px 0;
    position: relative;
    overflow: hidden;
  }
  
  .compression-demo::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(0, 212, 255, 0.1) 0%, transparent 70%);
    animation: pulse 8s ease-in-out infinite;
  }
  
  @keyframes pulse {
    0%, 100% { opacity: 0; transform: scale(0.8); }
    50% { opacity: 1; transform: scale(1); }
  }
  
  .compression-demo h3 {
    text-align: center;
    font-size: 2rem;
    margin-bottom: 40px;
    position: relative;
    z-index: 1;
  }
  
  .demo-container {
    display: flex;
    align-items: center;
    justify-content: space-around;
    margin-bottom: 50px;
    position: relative;
    z-index: 1;
  }
  
  .file-representation {
    text-align: center;
    position: relative;
  }
  
  .file-size {
    font-size: 2.5rem;
    font-weight: 700;
    display: block;
    margin-bottom: 20px;
  }
  
  .original .file-size {
    color: #FF006E;
  }
  
  .compressed .file-size {
    color: #00FF88;
  }
  
  .file-visual {
    width: 200px;
    height: 200px;
    position: relative;
    margin: 0 auto 20px;
  }
  
  .file-blocks {
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: repeat(10, 1fr);
    gap: 2px;
  }
  
  .block {
    background: #FF006E;
    opacity: 0.8;
    transition: all 0.5s ease;
    animation: blockPulse 2s ease-in-out infinite;
  }
  
  @keyframes blockPulse {
    0%, 100% { opacity: 0.8; }
    50% { opacity: 0.4; }
  }
  
  .single-block {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 30px;
    height: 30px;
    background: #00FF88;
    box-shadow: 0 0 40px rgba(0, 255, 136, 0.8), 0 0 80px rgba(0, 255, 136, 0.4);
    animation: glow 2s ease-in-out infinite;
  }
  
  @keyframes glow {
    0%, 100% { box-shadow: 0 0 40px rgba(0, 255, 136, 0.8), 0 0 80px rgba(0, 255, 136, 0.4); }
    50% { box-shadow: 0 0 60px rgba(0, 255, 136, 1), 0 0 120px rgba(0, 255, 136, 0.6); }
  }
  
  .file-label {
    font-size: 0.875rem;
    color: #999;
    text-transform: uppercase;
    letter-spacing: 1px;
  }
  
  .process-flow {
    position: relative;
    width: 150px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .arrow-line {
    position: absolute;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, #FF006E, #00D4FF, #00FF88);
    opacity: 0.5;
  }
  
  .process-label {
    background: #0A0E27;
    padding: 12px 20px;
    border-radius: 8px;
    font-size: 0.875rem;
    text-align: center;
    position: relative;
    z-index: 1;
    color: #00D4FF;
  }
  
  .arrow-head {
    position: absolute;
    right: -10px;
    width: 0;
    height: 0;
    border-left: 10px solid #00FF88;
    border-top: 8px solid transparent;
    border-bottom: 8px solid transparent;
  }
  
  .stats-row {
    display: flex;
    justify-content: center;
    gap: 60px;
    margin-bottom: 40px;
    position: relative;
    z-index: 1;
  }
  
  .stat {
    text-align: center;
  }
  
  .stat-value {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    color: #00D4FF;
    margin-bottom: 8px;
  }
  
  .stat-label {
    font-size: 0.875rem;
    color: #999;
  }
  
  .demo-button {
    display: block;
    margin: 0 auto;
    padding: 16px 40px;
    background: linear-gradient(135deg, #00D4FF, #0080FF);
    color: #000;
    font-weight: 700;
    font-size: 1.125rem;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    z-index: 1;
  }
  
  .demo-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 40px rgba(0, 212, 255, 0.4);
  }
  
  .compressing .block {
    animation: compress 1.5s ease-out forwards;
  }
  
  @keyframes compress {
    to {
      transform: scale(0);
      opacity: 0;
    }
  }
</style>

<script>
  function animateCompression() {
    const blocks = document.querySelectorAll('.block');
    const button = document.querySelector('.demo-button');
    
    button.disabled = true;
    button.textContent = 'Compressing...';
    
    document.querySelector('.file-blocks').classList.add('compressing');
    
    setTimeout(() => {
      document.querySelector('.file-blocks').classList.remove('compressing');
      button.disabled = false;
      button.textContent = 'Watch Compression';
    }, 2000);
  }
</script>
