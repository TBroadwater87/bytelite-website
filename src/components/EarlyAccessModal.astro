---
export interface Props {
  className?: string;
}

const { className = '' } = Astro.props;
---

<div class={`early-access-modal ${className}`} id="earlyAccessModal">
  <div class="modal-backdrop"></div>
  <div class="modal-content">
    <button class="modal-close" aria-label="Close modal">&times;</button>
    
    <div class="modal-header">
      <h2>Join the Revolution</h2>
      <p>Be among the first to experience the future of compression and consciousness</p>
    </div>
    
    <form class="early-access-form" id="earlyAccessForm">
      <div class="form-section">
        <label for="email">Email Address</label>
        <input 
          type="email" 
          id="email" 
          name="email" 
          placeholder="your@email.com" 
          required 
          aria-label="Email address"
        />
      </div>
      
      <div class="form-section">
        <label for="name">Full Name</label>
        <input 
          type="text" 
          id="name" 
          name="name" 
          placeholder="John Doe" 
          required 
          aria-label="Full name"
        />
      </div>
      
      <div class="form-section">
        <label for="company">Company (Optional)</label>
        <input 
          type="text" 
          id="company" 
          name="company" 
          placeholder="Your Company" 
          aria-label="Company name"
        />
      </div>
      
      <div class="form-section checkbox-group">
        <label class="checkbox-label">
          <input type="checkbox" name="bytelite_interest" checked />
          <span>Interested in ByteLite compression technology</span>
        </label>
        <label class="checkbox-label">
          <input type="checkbox" name="deepkore_interest" />
          <span>Interested in Deep Kore AGI updates</span>
        </label>
      </div>
      
      <button type="submit" class="btn btn-primary btn-large">
        Request Early Access
      </button>
      
      <p class="form-disclaimer">
        We respect your privacy. No spam, ever. 
        <a href="/privacy">Privacy Policy</a>
      </p>
    </form>
  </div>
</div>

<style>
  .early-access-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1000;
  }
  
  .early-access-modal.active {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .modal-backdrop {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(4px);
  }
  
  .modal-content {
    position: relative;
    background: linear-gradient(135deg, #0A0E27 0%, #060813 100%);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 16px;
    padding: 3rem;
    max-width: 500px;
    width: 90%;
    max-height: 90vh;
    overflow-y: auto;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
  }
  
  .modal-close {
    position: absolute;
    top: 1.5rem;
    right: 1.5rem;
    background: none;
    border: none;
    color: rgba(224, 224, 224, 0.6);
    font-size: 2rem;
    cursor: pointer;
    transition: all 0.3s ease;
    width: 44px;
    height: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .modal-close:hover {
    color: #E0E0E0;
    transform: rotate(90deg);
  }
  
  .modal-header {
    text-align: center;
    margin-bottom: 2rem;
  }
  
  .modal-header h2 {
    font-size: 2.5rem;
    font-weight: 700;
    margin: 0 0 1rem;
    background: linear-gradient(135deg, #00D4FF 0%, #A855F7 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  .modal-header p {
    color: rgba(224, 224, 224, 0.8);
    font-size: 1.125rem;
    margin: 0;
  }
  
  .early-access-form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  
  .form-section {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .form-section label {
    color: rgba(224, 224, 224, 0.9);
    font-size: 0.875rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  .form-section input[type="text"],
  .form-section input[type="email"] {
    padding: 0.875rem 1rem;
    background: rgba(255, 255, 255, 0.05);
    border: 2px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    color: #E0E0E0;
    font-size: 1rem;
    transition: all 0.3s ease;
  }
  
  .form-section input:focus {
    outline: none;
    border-color: #00D4FF;
    background: rgba(0, 212, 255, 0.05);
    box-shadow: 0 0 0 2px rgba(0, 212, 255, 0.2);
  }
  
  .form-section input::placeholder {
    color: rgba(224, 224, 224, 0.4);
  }
  
  .checkbox-group {
    gap: 1rem;
  }
  
  .checkbox-label {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    cursor: pointer;
    color: rgba(224, 224, 224, 0.9);
    font-size: 1rem;
    font-weight: normal;
    text-transform: none;
    letter-spacing: normal;
  }
  
  .checkbox-label input[type="checkbox"] {
    width: 20px;
    height: 20px;
    accent-color: #00D4FF;
    cursor: pointer;
  }
  
  .btn {
    padding: 1rem 2.5rem;
    border-radius: 8px;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s ease;
    display: inline-block;
    border: none;
    cursor: pointer;
    font-size: 1rem;
    text-align: center;
  }
  
  .btn-large {
    padding: 1.25rem 3rem;
    font-size: 1.125rem;
  }
  
  .btn-primary {
    background: linear-gradient(135deg, #00D4FF 0%, #0099CC 100%);
    color: #0A0E27;
    width: 100%;
  }
  
  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 30px rgba(0, 212, 255, 0.4);
  }
  
  .form-disclaimer {
    text-align: center;
    color: rgba(224, 224, 224, 0.6);
    font-size: 0.875rem;
    margin: 0;
  }
  
  .form-disclaimer a {
    color: #00D4FF;
    text-decoration: none;
  }
  
  .form-disclaimer a:hover {
    text-decoration: underline;
  }
  
  /* Success state */
  .form-success {
    text-align: center;
    padding: 2rem;
  }
  
  .form-success h3 {
    color: #00D4FF;
    font-size: 1.5rem;
    margin: 0 0 1rem;
  }
  
  .form-success p {
    color: rgba(224, 224, 224, 0.8);
    margin: 0;
  }
  
  @media (max-width: 768px) {
    .modal-content {
      padding: 2rem;
      width: 95%;
    }
    
    .modal-header h2 {
      font-size: 2rem;
    }
    
    .modal-header p {
      font-size: 1rem;
    }
    
    .modal-close {
      top: 1rem;
      right: 1rem;
    }
  }
</style>

<script>
  const modal = document.getElementById('earlyAccessModal');
  const form = document.getElementById('earlyAccessForm');
  const closeBtn = modal?.querySelector('.modal-close');
  const backdrop = modal?.querySelector('.modal-backdrop');
  
  // Show modal handler
  window.addEventListener('show-early-access-modal', () => {
    if (modal) {
      modal.classList.add('active');
      document.body.style.overflow = 'hidden';
    }
  });
  
  // Close modal handlers
  const closeModal = () => {
    if (modal) {
      modal.classList.remove('active');
      document.body.style.overflow = '';
    }
  };
  
  closeBtn?.addEventListener('click', closeModal);
  backdrop?.addEventListener('click', closeModal);
  
  // Form submission
  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(form);
    const data = Object.fromEntries(formData.entries());
    
    // Here you would normally send to your backend
    console.log('Early access request:', data);
    
    // Show success message
    const modalContent = modal?.querySelector('.modal-content');
    if (modalContent) {
      modalContent.innerHTML = `
        <button class="modal-close" aria-label="Close modal">&times;</button>
        <div class="form-success">
          <h3>Welcome to the Revolution!</h3>
          <p>Thank you for your interest. We'll be in touch soon with exclusive updates.</p>
          <button class="btn btn-primary" onclick="window.location.reload()">Got it</button>
        </div>
      `;
      
      // Re-attach close button listener
      const newCloseBtn = modalContent.querySelector('.modal-close');
      newCloseBtn?.addEventListener('click', closeModal);
    }
  });
</script>