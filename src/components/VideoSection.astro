---
export export interface Props {
  videoUrl?: string;
  posterUrl?: string;
  title?: string;
  description?: string;
}

const { 
  videoUrl = "/videos/compression-demo.mp4",
  posterUrl = "/images/video-poster.jpg",
  title = "See ByteLite in Action",
  description = "Watch as terabytes of data compress to mere bytes in real-time."
} = Astro.props;
---

<section class="video-section">
  <div class="container">
    <div class="video-content">
      <h2>{title}</h2>
      <p>{description}</p>
      <div class="video-wrapper">
        <video 
          controls 
          poster={posterUrl}
          preload="metadata"
          class="demo-video"
        >
          <source src={videoUrl} type="video/mp4">
          Your browser does not support the video tag.
        </video>
        <div class="video-overlay">
          <button class="play-button" aria-label="Play video">
            <svg width="60" height="60" viewBox="0 0 60 60" fill="none">
              <circle cx="30" cy="30" r="30" fill="rgba(0, 212, 255, 0.9)"/>
              <path d="M24 20L40 30L24 40V20Z" fill="white"/>
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .video-section {
    padding: 5rem 0;
    background: var(--color-bg);
  }

  .video-content {
    text-align: center;
    max-width: 900px;
    margin: 0 auto;
  }

  .video-content h2 {
    margin-bottom: 1rem;
  }

  .video-content p {
    font-size: 1.125rem;
    color: var(--color-text-muted);
    margin-bottom: 2.5rem;
  }

  .video-wrapper {
    position: relative;
    border-radius: 1rem;
    overflow: hidden;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
    border: 1px solid rgba(0, 212, 255, 0.2);
  }

  .demo-video {
    width: 100%;
    height: auto;
    display: block;
  }

  .video-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(6, 8, 19, 0.7);
    opacity: 1;
    transition: opacity 0.3s ease;
    cursor: pointer;
  }

  .video-overlay.hidden {
    opacity: 0;
    pointer-events: none;
  }

  .play-button {
    background: none;
    border: none;
    cursor: pointer;
    transition: transform 0.2s ease;
  }

  .play-button:hover {
    transform: scale(1.1);
  }

  .play-button svg {
    filter: drop-shadow(0 4px 20px rgba(0, 212, 255, 0.5));
  }
</style>

<script>
  const video = document.querySelector('.demo-video') as HTMLVideoElement;
  const overlay = document.querySelector('.video-overlay');
  
  overlay?.addEventListener('click', () => {
    video?.play();
    overlay?.classList.add('hidden');
  });

  video?.addEventListener('play', () => {
    overlay?.classList.add('hidden');
  });

  video?.addEventListener('pause', () => {
    overlay?.classList.remove('hidden');
  });
</script>

