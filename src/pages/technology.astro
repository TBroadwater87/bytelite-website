---
import Layout from '../layouts/Layout.astro';
---

<Layout 
  title="ByteLite Technology - Revolutionary Compression"
  description="Discover ByteLite's patent-pending compression technology that transforms 1GB into 15 bytes. Learn about Deep Kore Neural Recursion and the future of AGI."
>

  <section class="technology-content">
    <div class="container">
      <!-- Core Concept -->
      <div class="concept-section">
        <h2>The ByteLite Breakthrough</h2>
        <p class="lead-text">
          Traditional compression methods hit theoretical limits. ByteLite transcends these boundaries 
          through a revolutionary approach that transforms data using recursive mathematical operations.
        </p>
      </div>

      <!-- Key Points -->
      <div class="key-points">
        <div class="point-card">
          <div class="point-icon">üî¨</div>
          <h3>Patent Pending</h3>
          <p>US 63/807,027 - Protecting groundbreaking compression mathematics</p>
        </div>
        
        <div class="point-card">
          <div class="point-icon">üîí</div>
          <h3>Lossless Compression</h3>
          <p>Perfect data reconstruction with SHA-256 verification</p>
        </div>
        
        <div class="point-card">
          <div class="point-icon">‚ôæÔ∏è</div>
          <h3>Unbounded Potential</h3>
          <p>Compression ratios approaching theoretical infinity</p>
        </div>
      </div>

      <!-- Infinite Storage Section -->
      <div class="infinite-storage-section">
        <h2>Infinite Data Storage in Finite Space</h2>
        <p class="section-intro">
          ByteLite's hierarchical compression structure enables a revolutionary approach to data storage 
          that approaches theoretical infinity through recursive application.
        </p>
        
        <div class="hierarchy-demo">
          <h3>The Power of Hierarchical Compression</h3>
          <div class="compression-levels">
            <div class="level">
              <div class="level-header">Level 1</div>
              <div class="level-content">
                <div class="data-flow">
                  <span class="data-size">1 GB file</span>
                  <span class="arrow">‚Üí</span>
                  <span class="compressed-size">15 bytes</span>
                </div>
              </div>
            </div>
            
            <div class="level">
              <div class="level-header">Level 2</div>
              <div class="level-content">
                <p class="level-description">
                  Combine multiple compressed files:<br/>
                  68.3 million √ó 15 bytes = ~1 GB
                </p>
                <div class="data-flow">
                  <span class="data-size">1 GB of compressed files</span>
                  <span class="arrow">‚Üí</span>
                  <span class="compressed-size">15 bytes</span>
                </div>
              </div>
            </div>
            
            <div class="level">
              <div class="level-header">Level 3</div>
              <div class="level-content">
                <p class="level-description">
                  Recursive compression continues:<br/>
                  68.3 million √ó Level 2 files
                </p>
                <div class="data-flow">
                  <span class="data-size">~68.3 million GB</span>
                  <span class="arrow">‚Üí</span>
                  <span class="compressed-size">15 bytes</span>
                </div>
              </div>
            </div>
            
            <div class="level infinite">
              <div class="level-header">Level ‚àû</div>
              <div class="level-content">
                <p class="infinity-text">
                  Theoretical infinite storage<br/>
                  in just 15 bytes
                </p>
              </div>
            </div>
          </div>
          
          <div class="explanation-box">
            <h4>How It Works</h4>
            <p>
              ByteLite's compression algorithm doesn't just compress data‚Äîit creates a hierarchical structure 
              that can be recursively applied. Each compression level maintains perfect data integrity while 
              exponentially increasing storage capacity.
            </p>
            <ul>
              <li>Start with any 1GB file ‚Üí compress to 15 bytes</li>
              <li>Collect ~68.3 million compressed files (15 bytes each) to equal 1GB</li>
              <li>Compress this collection ‚Üí another 15 bytes</li>
              <li>Repeat infinitely for unlimited storage potential</li>
            </ul>
          </div>
        </div>
      </div>

      <!-- Deep Kore Section -->
      <div class="deep-kore-section">
        <h2>Deep Kore Neural Recursion</h2>
        <p class="section-intro">
          The mathematical principles behind ByteLite have revealed unexpected applications 
          in computational intelligence, leading to breakthroughs in neural architecture design.
        </p>
        
        <div class="notice-box">
          <p>
            <strong>Notice:</strong> Due to dual-use implications in achieving artificial general intelligence, 
            technical specifications are currently restricted. Authorized information will be released 
            through our subscription channels.
          </p>
        </div>
      </div>

      <!-- Call to Action -->
      <div class="cta-section">
        <h3>Explore ByteLite Technology</h3>
        <p>Experience the future of data compression and computational intelligence.</p>
        <div class="cta-buttons">
          <a href="/demo" class="btn btn-primary">Try Interactive Demo</a>
          <a href="/subscribe" class="btn btn-secondary">Get Technical Updates</a>
        </div>
      </div>
    </div>
  </section>
</Layout>

<style>
  .technology-content {
    padding: 4rem 0;
    background: var(--color-bg-darker);
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  /* Concept Section */
  .concept-section {
    text-align: center;
    margin-bottom: 6rem;
  }

  .concept-section h2 {
    font-size: 2.5rem;
    color: var(--color-primary);
    margin-bottom: 1.5rem;
  }

  .lead-text {
    font-size: 1.25rem;
    color: var(--color-text-dim);
    max-width: 800px;
    margin: 0 auto;
    line-height: 1.8;
  }

  /* Key Points */
  .key-points {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin-bottom: 6rem;
  }

  .point-card {
    background: rgba(10, 14, 39, 0.6);
    border: 1px solid rgba(0, 212, 255, 0.2);
    border-radius: 12px;
    padding: 2.5rem;
    text-align: center;
    transition: all 0.3s ease;
  }

  .point-card:hover {
    transform: translateY(-5px);
    border-color: var(--color-primary);
    box-shadow: 0 20px 40px rgba(0, 212, 255, 0.1);
  }

  .point-icon {
    font-size: 3rem;
    margin-bottom: 1rem;
  }

  .point-card h3 {
    font-size: 1.5rem;
    color: var(--color-primary);
    margin-bottom: 1rem;
  }

  .point-card p {
    color: var(--color-text-dim);
    line-height: 1.6;
  }

  /* Infinite Storage Section */
  .infinite-storage-section {
    margin-bottom: 6rem;
  }

  .infinite-storage-section h2 {
    font-size: 2.5rem;
    color: var(--color-primary);
    text-align: center;
    margin-bottom: 1rem;
  }

  .hierarchy-demo {
    background: rgba(10, 14, 39, 0.6);
    border: 1px solid rgba(0, 212, 255, 0.2);
    border-radius: 16px;
    padding: 3rem;
    margin-top: 3rem;
  }

  .hierarchy-demo h3 {
    font-size: 1.75rem;
    color: var(--color-primary);
    text-align: center;
    margin-bottom: 3rem;
  }

  .compression-levels {
    display: grid;
    gap: 2rem;
    margin-bottom: 3rem;
  }

  .level {
    background: rgba(0, 212, 255, 0.05);
    border: 1px solid rgba(0, 212, 255, 0.3);
    border-radius: 12px;
    padding: 1.5rem;
    transition: all 0.3s ease;
  }

  .level:hover {
    transform: translateX(10px);
    border-color: var(--color-primary);
    box-shadow: 0 10px 30px rgba(0, 212, 255, 0.2);
  }

  .level-header {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--color-primary);
    margin-bottom: 1rem;
  }

  .level-description {
    font-size: 0.875rem;
    color: var(--color-text-dim);
    margin-bottom: 1rem;
    line-height: 1.5;
  }

  .data-flow {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    font-weight: 600;
  }

  .data-size {
    color: var(--color-text);
    font-size: 1.125rem;
  }

  .arrow {
    color: var(--color-primary);
    font-size: 1.5rem;
  }

  .compressed-size {
    color: var(--color-primary);
    font-size: 1.25rem;
    text-shadow: 0 0 20px rgba(0, 212, 255, 0.5);
  }

  .level.infinite {
    background: linear-gradient(135deg, rgba(168, 85, 247, 0.1), rgba(0, 212, 255, 0.1));
    border-color: rgba(168, 85, 247, 0.5);
  }

  .infinity-text {
    text-align: center;
    font-size: 1.25rem;
    color: var(--color-secondary);
    font-weight: 600;
    text-shadow: 0 0 30px rgba(255, 0, 110, 0.5);
  }

  .explanation-box {
    background: rgba(0, 212, 255, 0.05);
    border: 1px solid rgba(0, 212, 255, 0.2);
    border-radius: 12px;
    padding: 2rem;
  }

  .explanation-box h4 {
    font-size: 1.5rem;
    color: var(--color-primary);
    margin-bottom: 1rem;
  }

  .explanation-box p {
    color: var(--color-text-dim);
    line-height: 1.6;
    margin-bottom: 1.5rem;
  }

  .explanation-box ul {
    list-style: none;
    padding: 0;
  }

  .explanation-box li {
    color: var(--color-text-dim);
    padding-left: 2rem;
    position: relative;
    margin-bottom: 0.75rem;
    line-height: 1.5;
  }

  .explanation-box li::before {
    content: "‚Üí";
    position: absolute;
    left: 0;
    color: var(--color-primary);
    font-weight: 600;
  }

  /* Deep Kore Section */
  .deep-kore-section {
    background: linear-gradient(135deg, rgba(255, 0, 110, 0.05) 0%, rgba(0, 212, 255, 0.05) 100%);
    border-radius: 16px;
    padding: 4rem;
    margin-bottom: 4rem;
  }

  .deep-kore-section h2 {
    font-size: 2.5rem;
    color: var(--color-secondary);
    text-align: center;
    margin-bottom: 1rem;
    text-shadow: 0 0 30px rgba(255, 0, 110, 0.5);
  }

  .section-intro {
    text-align: center;
    color: var(--color-text-dim);
    font-size: 1.125rem;
    max-width: 700px;
    margin: 0 auto 2rem;
    line-height: 1.6;
  }

  .notice-box {
    background: rgba(255, 0, 110, 0.1);
    border: 1px solid rgba(255, 0, 110, 0.3);
    border-radius: 8px;
    padding: 1.5rem;
    max-width: 700px;
    margin: 0 auto;
  }

  .notice-box p {
    color: var(--color-text-dim);
    font-size: 0.875rem;
    margin: 0;
    line-height: 1.6;
  }

  /* CTA Section */
  .cta-section {
    text-align: center;
    padding: 4rem;
    background: rgba(10, 14, 39, 0.6);
    border-radius: 16px;
    border: 1px solid rgba(0, 212, 255, 0.2);
  }

  .cta-section h3 {
    font-size: 2rem;
    color: var(--color-primary);
    margin-bottom: 1rem;
  }

  .cta-section p {
    color: var(--color-text-dim);
    font-size: 1.125rem;
    margin-bottom: 2rem;
  }

  .cta-buttons {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .btn {
    padding: 1rem 2rem;
    border-radius: 8px;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s ease;
    display: inline-block;
  }

  .btn-primary {
    background: var(--color-primary);
    color: var(--color-bg-dark);
  }

  .btn-primary:hover {
    background: #00B8E6;
    transform: translateY(-2px);
    box-shadow: 0 10px 30px rgba(0, 212, 255, 0.3);
  }

  .btn-secondary {
    background: transparent;
    color: var(--color-secondary);
    border: 2px solid var(--color-secondary);
  }

  .btn-secondary:hover {
    background: var(--color-secondary);
    color: var(--color-bg-dark);
  }

  @media (max-width: 768px) {
    .concept-section h2,
    .infinite-storage-section h2,
    .deep-kore-section h2 {
      font-size: 2rem;
    }

    .key-points {
      grid-template-columns: 1fr;
    }

    .hierarchy-demo {
      padding: 2rem;
    }

    .hierarchy-demo h3 {
      font-size: 1.5rem;
    }

    .level {
      padding: 1rem;
    }

    .level:hover {
      transform: translateX(5px);
    }

    .data-flow {
      flex-direction: column;
      gap: 0.5rem;
    }

    .data-size,
    .compressed-size {
      font-size: 1rem;
    }

    .arrow {
      transform: rotate(90deg);
    }

    .explanation-box {
      padding: 1.5rem;
    }

    .deep-kore-section {
      padding: 2rem;
    }

    .cta-section {
      padding: 2rem;
    }
  }
</style>